PS C:\Users\Sanjay Dwivedi\rails1> irb
irb(main):001:0* hash =Hash.
                           
                     

irb(main):001:0> hash =Hash.new
=> {}
irb(main):002:0* hash.



irb(main):002:0> hash.methods
=>
[:value?,
 :compare_by_identity, 
 :compare_by_identity?,
 :deconstruct_keys,    
 :any?,
 :dig,
 :<=,
 :>=,
 :==,
 :key,
 :[],
 :[]=,
 :empty?,
 :eql?,
 :index,
 :replace,
 :clear,
 :to_h,
 :include?,
 :pretty_print,
 :inspect,
 :fetch,
 :length,
 :size,
 :each,
 :shift,
 :<,
 :>,
 :select!,
 :filter!,
 :keep_if,
 :values_at,
 :to_hash,
 :to_proc,
 :delete_if,
 :to_a,
 :to_s,
 :reject!,
 :assoc,
 :rassoc,
 :compact,
 :compact!,
 :flatten,
 :pretty_print_cycle,
 :delete,
 :default,
 :rehash,
 :store,
 :select,
 :default=,
 :default_proc,
 :default_proc=,
 :each_value,
 :each_key,
 :each_pair,
 :transform_keys,
 :transform_keys!,
 :transform_values,
 :transform_values!,
 :keys,
 :values,
 :fetch_values,
 :invert,
 :slice,
 :filter,
 :update,
 :reject,
 :merge,
 :has_key?,
 :merge!,
 :hash,
 :member?,
 :has_value?,
 :key?,
 :each_slice,
 :each_cons,
 :each_with_object,
 :zip,
 :take,
 :take_while,
 :drop,
 :drop_while,
 :cycle,
 :chunk,
 :slice_before,
 :slice_after,
 :slice_when,
 :chunk_while,
 :sum,
 :uniq,
 :chain,
 :lazy,
 :max,
 :min,
 :to_set,
 :find,
 :entries,
 :sort,
 :sort_by,
 :grep,
 :grep_v,
 :count,
 :detect,
 :find_index,
 :find_all,
 :filter_map,
 :collect,
 :map,
 :flat_map,
 :collect_concat,
 :inject,
 :reduce,
 :partition,
 :group_by,
 :tally,
 :first,
 :all?,
 :one?,
 :none?,
 :minmax,
 :min_by,
 :max_by,
 :minmax_by,
 :each_with_index,
 :reverse_each,
 :each_entry,
 :pretty_print_instance_variables,
 :pretty_print_inspect,
 :dup,
 :itself,
 :yield_self,
 :then,
 :taint,
 :tainted?,
 :untaint,
 :untrust,
 :untrusted?,
 :trust,
 :frozen?,
 :methods,
 :singleton_methods,
 :protected_methods,
 :private_methods,
 :public_methods,
 :instance_variables,
 :instance_variable_get,
 :instance_variable_set,
 :instance_variable_defined?,
 :remove_instance_variable,
 :instance_of?,
 :kind_of?,
 :is_a?,
 :tap,
 :class,
 :clone,
 :display,
 :singleton_class,
 :singleton_method,
 :method,
 :public_send,
 :define_singleton_method,
 :public_method,
 :extend,
 :to_enum,
 :enum_for,
 :<=>,
 :===,
 :=~,
 :!~,
 :nil?,
 :respond_to?,
 :freeze,
 :object_id,
 :send,
 :pretty_inspect,
 :__send__,
 :!,
 :!=,
 :__id__,
 :equal?,
 :instance_eval,
 :instance_exec]
irb(main):003:0> hash
=> {}
irb(main):004:0>
irb(main):005:0* hash.


irb(main):005:0> hash.empty?
=> true
irb(main):006:1> hash[:key_one} ="hello"
irb(main):007:1*   hash.

                       

irb(main):006:0> hash
=> {}
irb(main):007:0* hash.



irb(main):007:0> hash.empty?
=> true
irb(main):008:0> hash[:key_one] = 'hey'
=> "hey"
irb(main):009:0> hash
=> {:key_one=>"hey"}
irb(main):010:0> h1 ={key1: '1', key2: '2'}
=> {:key1=>"1", :key2=>"2"}
irb(main):011:0> h2 = {key2: '1', key2: '2'}
(irb):11: warning: key :key2 is duplicated and overwritten on line 11
=> {:key2=>"2"}